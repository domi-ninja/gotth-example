// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: healthchecks.sql

package db_generated

import (
	"context"
	"time"
)

const healthchecksCreate = `-- name: HealthchecksCreate :one
INSERT INTO healthchecks (id, created_at)
VALUES (?, ?)
RETURNING id, created_at
`

type HealthchecksCreateParams struct {
	ID        interface{}
	CreatedAt time.Time
}

func (q *Queries) HealthchecksCreate(ctx context.Context, arg HealthchecksCreateParams) (Healthcheck, error) {
	row := q.db.QueryRowContext(ctx, healthchecksCreate, arg.ID, arg.CreatedAt)
	var i Healthcheck
	err := row.Scan(&i.ID, &i.CreatedAt)
	return i, err
}

const healthchecksRead = `-- name: HealthchecksRead :one
SELECT id, created_at
FROM healthchecks 
WHERE id = ?
`

func (q *Queries) HealthchecksRead(ctx context.Context, id interface{}) (Healthcheck, error) {
	row := q.db.QueryRowContext(ctx, healthchecksRead, id)
	var i Healthcheck
	err := row.Scan(&i.ID, &i.CreatedAt)
	return i, err
}
